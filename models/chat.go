// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Chat chat
//
// swagger:model Chat
type Chat struct {

	// id
	ID int64 `json:"id,omitempty"`

	// last message
	LastMessage *Message `json:"lastMessage,omitempty"`

	// partner
	Partner *User `json:"partner,omitempty"`

	// rights
	Rights *ChatRights `json:"rights,omitempty"`

	// unread count
	UnreadCount int64 `json:"unreadCount,omitempty"`
}

// Validate validates this chat
func (m *Chat) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLastMessage(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePartner(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRights(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Chat) validateLastMessage(formats strfmt.Registry) error {

	if swag.IsZero(m.LastMessage) { // not required
		return nil
	}

	if m.LastMessage != nil {
		if err := m.LastMessage.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("lastMessage")
			}
			return err
		}
	}

	return nil
}

func (m *Chat) validatePartner(formats strfmt.Registry) error {

	if swag.IsZero(m.Partner) { // not required
		return nil
	}

	if m.Partner != nil {
		if err := m.Partner.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("partner")
			}
			return err
		}
	}

	return nil
}

func (m *Chat) validateRights(formats strfmt.Registry) error {

	if swag.IsZero(m.Rights) { // not required
		return nil
	}

	if m.Rights != nil {
		if err := m.Rights.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("rights")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Chat) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Chat) UnmarshalBinary(b []byte) error {
	var res Chat
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ChatRights chat rights
//
// swagger:model ChatRights
type ChatRights struct {

	// send
	Send bool `json:"send,omitempty"`
}

// Validate validates this chat rights
func (m *ChatRights) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ChatRights) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ChatRights) UnmarshalBinary(b []byte) error {
	var res ChatRights
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
