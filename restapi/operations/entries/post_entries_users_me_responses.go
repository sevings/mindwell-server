// Code generated by go-swagger; DO NOT EDIT.

package entries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sevings/mindwell-server/models"
)

// PostEntriesUsersMeCreatedCode is the HTTP code returned for type PostEntriesUsersMeCreated
const PostEntriesUsersMeCreatedCode int = 201

/*PostEntriesUsersMeCreated Entry data

swagger:response postEntriesUsersMeCreated
*/
type PostEntriesUsersMeCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Entry `json:"body,omitempty"`
}

// NewPostEntriesUsersMeCreated creates PostEntriesUsersMeCreated with default headers values
func NewPostEntriesUsersMeCreated() *PostEntriesUsersMeCreated {
	return &PostEntriesUsersMeCreated{}
}

// WithPayload adds the payload to the post entries users me created response
func (o *PostEntriesUsersMeCreated) WithPayload(payload *models.Entry) *PostEntriesUsersMeCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post entries users me created response
func (o *PostEntriesUsersMeCreated) SetPayload(payload *models.Entry) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostEntriesUsersMeCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostEntriesUsersMeForbiddenCode is the HTTP code returned for type PostEntriesUsersMeForbidden
const PostEntriesUsersMeForbiddenCode int = 403

/*PostEntriesUsersMeForbidden access denied

swagger:response postEntriesUsersMeForbidden
*/
type PostEntriesUsersMeForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostEntriesUsersMeForbidden creates PostEntriesUsersMeForbidden with default headers values
func NewPostEntriesUsersMeForbidden() *PostEntriesUsersMeForbidden {
	return &PostEntriesUsersMeForbidden{}
}

// WithPayload adds the payload to the post entries users me forbidden response
func (o *PostEntriesUsersMeForbidden) WithPayload(payload *models.Error) *PostEntriesUsersMeForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post entries users me forbidden response
func (o *PostEntriesUsersMeForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostEntriesUsersMeForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
