// Code generated by go-swagger; DO NOT EDIT.

package entries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/sevings/mindwell-server/models"
)

// GetEntriesRandomOKCode is the HTTP code returned for type GetEntriesRandomOK
const GetEntriesRandomOKCode int = 200

/*GetEntriesRandomOK Entry data

swagger:response getEntriesRandomOK
*/
type GetEntriesRandomOK struct {

	/*
	  In: Body
	*/
	Payload *models.Entry `json:"body,omitempty"`
}

// NewGetEntriesRandomOK creates GetEntriesRandomOK with default headers values
func NewGetEntriesRandomOK() *GetEntriesRandomOK {

	return &GetEntriesRandomOK{}
}

// WithPayload adds the payload to the get entries random o k response
func (o *GetEntriesRandomOK) WithPayload(payload *models.Entry) *GetEntriesRandomOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get entries random o k response
func (o *GetEntriesRandomOK) SetPayload(payload *models.Entry) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEntriesRandomOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetEntriesRandomNotFoundCode is the HTTP code returned for type GetEntriesRandomNotFound
const GetEntriesRandomNotFoundCode int = 404

/*GetEntriesRandomNotFound No entries found

swagger:response getEntriesRandomNotFound
*/
type GetEntriesRandomNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetEntriesRandomNotFound creates GetEntriesRandomNotFound with default headers values
func NewGetEntriesRandomNotFound() *GetEntriesRandomNotFound {

	return &GetEntriesRandomNotFound{}
}

// WithPayload adds the payload to the get entries random not found response
func (o *GetEntriesRandomNotFound) WithPayload(payload *models.Error) *GetEntriesRandomNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get entries random not found response
func (o *GetEntriesRandomNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEntriesRandomNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
