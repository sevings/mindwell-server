// Code generated by go-swagger; DO NOT EDIT.

package entries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sevings/mindwell-server/models"
)

// GetEntriesMeOKCode is the HTTP code returned for type GetEntriesMeOK
const GetEntriesMeOKCode int = 200

/*GetEntriesMeOK Entry list

swagger:response getEntriesMeOK
*/
type GetEntriesMeOK struct {

	/*
	  In: Body
	*/
	Payload *models.Feed `json:"body,omitempty"`
}

// NewGetEntriesMeOK creates GetEntriesMeOK with default headers values
func NewGetEntriesMeOK() *GetEntriesMeOK {
	return &GetEntriesMeOK{}
}

// WithPayload adds the payload to the get entries me o k response
func (o *GetEntriesMeOK) WithPayload(payload *models.Feed) *GetEntriesMeOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get entries me o k response
func (o *GetEntriesMeOK) SetPayload(payload *models.Feed) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEntriesMeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetEntriesMeForbiddenCode is the HTTP code returned for type GetEntriesMeForbidden
const GetEntriesMeForbiddenCode int = 403

/*GetEntriesMeForbidden access denied

swagger:response getEntriesMeForbidden
*/
type GetEntriesMeForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetEntriesMeForbidden creates GetEntriesMeForbidden with default headers values
func NewGetEntriesMeForbidden() *GetEntriesMeForbidden {
	return &GetEntriesMeForbidden{}
}

// WithPayload adds the payload to the get entries me forbidden response
func (o *GetEntriesMeForbidden) WithPayload(payload *models.Error) *GetEntriesMeForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get entries me forbidden response
func (o *GetEntriesMeForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEntriesMeForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
