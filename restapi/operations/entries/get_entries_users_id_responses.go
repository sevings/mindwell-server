// Code generated by go-swagger; DO NOT EDIT.

package entries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sevings/yummy-server/models"
)

// GetEntriesUsersIDOKCode is the HTTP code returned for type GetEntriesUsersIDOK
const GetEntriesUsersIDOKCode int = 200

/*GetEntriesUsersIDOK Entry list

swagger:response getEntriesUsersIdOK
*/
type GetEntriesUsersIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.Feed `json:"body,omitempty"`
}

// NewGetEntriesUsersIDOK creates GetEntriesUsersIDOK with default headers values
func NewGetEntriesUsersIDOK() *GetEntriesUsersIDOK {
	return &GetEntriesUsersIDOK{}
}

// WithPayload adds the payload to the get entries users Id o k response
func (o *GetEntriesUsersIDOK) WithPayload(payload *models.Feed) *GetEntriesUsersIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get entries users Id o k response
func (o *GetEntriesUsersIDOK) SetPayload(payload *models.Feed) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEntriesUsersIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetEntriesUsersIDNotFoundCode is the HTTP code returned for type GetEntriesUsersIDNotFound
const GetEntriesUsersIDNotFoundCode int = 404

/*GetEntriesUsersIDNotFound User not found

swagger:response getEntriesUsersIdNotFound
*/
type GetEntriesUsersIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetEntriesUsersIDNotFound creates GetEntriesUsersIDNotFound with default headers values
func NewGetEntriesUsersIDNotFound() *GetEntriesUsersIDNotFound {
	return &GetEntriesUsersIDNotFound{}
}

// WithPayload adds the payload to the get entries users Id not found response
func (o *GetEntriesUsersIDNotFound) WithPayload(payload *models.Error) *GetEntriesUsersIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get entries users Id not found response
func (o *GetEntriesUsersIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEntriesUsersIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
