// Code generated by go-swagger; DO NOT EDIT.

package entries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sevings/mindwell-server/models"
)

// GetEntriesMeWatchingOKCode is the HTTP code returned for type GetEntriesMeWatchingOK
const GetEntriesMeWatchingOKCode int = 200

/*GetEntriesMeWatchingOK Entry list

swagger:response getEntriesMeWatchingOK
*/
type GetEntriesMeWatchingOK struct {

	/*
	  In: Body
	*/
	Payload *models.Feed `json:"body,omitempty"`
}

// NewGetEntriesMeWatchingOK creates GetEntriesMeWatchingOK with default headers values
func NewGetEntriesMeWatchingOK() *GetEntriesMeWatchingOK {
	return &GetEntriesMeWatchingOK{}
}

// WithPayload adds the payload to the get entries me watching o k response
func (o *GetEntriesMeWatchingOK) WithPayload(payload *models.Feed) *GetEntriesMeWatchingOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get entries me watching o k response
func (o *GetEntriesMeWatchingOK) SetPayload(payload *models.Feed) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEntriesMeWatchingOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetEntriesMeWatchingForbiddenCode is the HTTP code returned for type GetEntriesMeWatchingForbidden
const GetEntriesMeWatchingForbiddenCode int = 403

/*GetEntriesMeWatchingForbidden access denied

swagger:response getEntriesMeWatchingForbidden
*/
type GetEntriesMeWatchingForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetEntriesMeWatchingForbidden creates GetEntriesMeWatchingForbidden with default headers values
func NewGetEntriesMeWatchingForbidden() *GetEntriesMeWatchingForbidden {
	return &GetEntriesMeWatchingForbidden{}
}

// WithPayload adds the payload to the get entries me watching forbidden response
func (o *GetEntriesMeWatchingForbidden) WithPayload(payload *models.Error) *GetEntriesMeWatchingForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get entries me watching forbidden response
func (o *GetEntriesMeWatchingForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEntriesMeWatchingForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
