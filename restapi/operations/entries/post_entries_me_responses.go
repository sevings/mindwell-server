// Code generated by go-swagger; DO NOT EDIT.

package entries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sevings/mindwell-server/models"
)

// PostEntriesMeCreatedCode is the HTTP code returned for type PostEntriesMeCreated
const PostEntriesMeCreatedCode int = 201

/*PostEntriesMeCreated Entry data

swagger:response postEntriesMeCreated
*/
type PostEntriesMeCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Entry `json:"body,omitempty"`
}

// NewPostEntriesMeCreated creates PostEntriesMeCreated with default headers values
func NewPostEntriesMeCreated() *PostEntriesMeCreated {
	return &PostEntriesMeCreated{}
}

// WithPayload adds the payload to the post entries me created response
func (o *PostEntriesMeCreated) WithPayload(payload *models.Entry) *PostEntriesMeCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post entries me created response
func (o *PostEntriesMeCreated) SetPayload(payload *models.Entry) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostEntriesMeCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostEntriesMeForbiddenCode is the HTTP code returned for type PostEntriesMeForbidden
const PostEntriesMeForbiddenCode int = 403

/*PostEntriesMeForbidden access denied

swagger:response postEntriesMeForbidden
*/
type PostEntriesMeForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostEntriesMeForbidden creates PostEntriesMeForbidden with default headers values
func NewPostEntriesMeForbidden() *PostEntriesMeForbidden {
	return &PostEntriesMeForbidden{}
}

// WithPayload adds the payload to the post entries me forbidden response
func (o *PostEntriesMeForbidden) WithPayload(payload *models.Error) *PostEntriesMeForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post entries me forbidden response
func (o *PostEntriesMeForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostEntriesMeForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
