// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sevings/yummy-server/models"
)

// GetUsersByNameNameOKCode is the HTTP code returned for type GetUsersByNameNameOK
const GetUsersByNameNameOKCode int = 200

/*GetUsersByNameNameOK User data

swagger:response getUsersByNameNameOK
*/
type GetUsersByNameNameOK struct {

	/*
	  In: Body
	*/
	Payload *models.Profile `json:"body,omitempty"`
}

// NewGetUsersByNameNameOK creates GetUsersByNameNameOK with default headers values
func NewGetUsersByNameNameOK() *GetUsersByNameNameOK {
	return &GetUsersByNameNameOK{}
}

// WithPayload adds the payload to the get users by name name o k response
func (o *GetUsersByNameNameOK) WithPayload(payload *models.Profile) *GetUsersByNameNameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users by name name o k response
func (o *GetUsersByNameNameOK) SetPayload(payload *models.Profile) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersByNameNameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUsersByNameNameNotFoundCode is the HTTP code returned for type GetUsersByNameNameNotFound
const GetUsersByNameNameNotFoundCode int = 404

/*GetUsersByNameNameNotFound User not found

swagger:response getUsersByNameNameNotFound
*/
type GetUsersByNameNameNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUsersByNameNameNotFound creates GetUsersByNameNameNotFound with default headers values
func NewGetUsersByNameNameNotFound() *GetUsersByNameNameNotFound {
	return &GetUsersByNameNameNotFound{}
}

// WithPayload adds the payload to the get users by name name not found response
func (o *GetUsersByNameNameNotFound) WithPayload(payload *models.Error) *GetUsersByNameNameNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users by name name not found response
func (o *GetUsersByNameNameNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersByNameNameNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
