// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sevings/yummy-server/models"
)

// GetUsersByNameNameFollowersOKCode is the HTTP code returned for type GetUsersByNameNameFollowersOK
const GetUsersByNameNameFollowersOKCode int = 200

/*GetUsersByNameNameFollowersOK User list

swagger:response getUsersByNameNameFollowersOK
*/
type GetUsersByNameNameFollowersOK struct {

	/*
	  In: Body
	*/
	Payload *models.UserList `json:"body,omitempty"`
}

// NewGetUsersByNameNameFollowersOK creates GetUsersByNameNameFollowersOK with default headers values
func NewGetUsersByNameNameFollowersOK() *GetUsersByNameNameFollowersOK {
	return &GetUsersByNameNameFollowersOK{}
}

// WithPayload adds the payload to the get users by name name followers o k response
func (o *GetUsersByNameNameFollowersOK) WithPayload(payload *models.UserList) *GetUsersByNameNameFollowersOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users by name name followers o k response
func (o *GetUsersByNameNameFollowersOK) SetPayload(payload *models.UserList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersByNameNameFollowersOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUsersByNameNameFollowersForbiddenCode is the HTTP code returned for type GetUsersByNameNameFollowersForbidden
const GetUsersByNameNameFollowersForbiddenCode int = 403

/*GetUsersByNameNameFollowersForbidden access denied

swagger:response getUsersByNameNameFollowersForbidden
*/
type GetUsersByNameNameFollowersForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUsersByNameNameFollowersForbidden creates GetUsersByNameNameFollowersForbidden with default headers values
func NewGetUsersByNameNameFollowersForbidden() *GetUsersByNameNameFollowersForbidden {
	return &GetUsersByNameNameFollowersForbidden{}
}

// WithPayload adds the payload to the get users by name name followers forbidden response
func (o *GetUsersByNameNameFollowersForbidden) WithPayload(payload *models.Error) *GetUsersByNameNameFollowersForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users by name name followers forbidden response
func (o *GetUsersByNameNameFollowersForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersByNameNameFollowersForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUsersByNameNameFollowersNotFoundCode is the HTTP code returned for type GetUsersByNameNameFollowersNotFound
const GetUsersByNameNameFollowersNotFoundCode int = 404

/*GetUsersByNameNameFollowersNotFound User not found

swagger:response getUsersByNameNameFollowersNotFound
*/
type GetUsersByNameNameFollowersNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUsersByNameNameFollowersNotFound creates GetUsersByNameNameFollowersNotFound with default headers values
func NewGetUsersByNameNameFollowersNotFound() *GetUsersByNameNameFollowersNotFound {
	return &GetUsersByNameNameFollowersNotFound{}
}

// WithPayload adds the payload to the get users by name name followers not found response
func (o *GetUsersByNameNameFollowersNotFound) WithPayload(payload *models.Error) *GetUsersByNameNameFollowersNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users by name name followers not found response
func (o *GetUsersByNameNameFollowersNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersByNameNameFollowersNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
