// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sevings/yummy-server/models"
)

// GetUsersByNameNameFollowingsOKCode is the HTTP code returned for type GetUsersByNameNameFollowingsOK
const GetUsersByNameNameFollowingsOKCode int = 200

/*GetUsersByNameNameFollowingsOK User list

swagger:response getUsersByNameNameFollowingsOK
*/
type GetUsersByNameNameFollowingsOK struct {

	/*
	  In: Body
	*/
	Payload *models.UserList `json:"body,omitempty"`
}

// NewGetUsersByNameNameFollowingsOK creates GetUsersByNameNameFollowingsOK with default headers values
func NewGetUsersByNameNameFollowingsOK() *GetUsersByNameNameFollowingsOK {
	return &GetUsersByNameNameFollowingsOK{}
}

// WithPayload adds the payload to the get users by name name followings o k response
func (o *GetUsersByNameNameFollowingsOK) WithPayload(payload *models.UserList) *GetUsersByNameNameFollowingsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users by name name followings o k response
func (o *GetUsersByNameNameFollowingsOK) SetPayload(payload *models.UserList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersByNameNameFollowingsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUsersByNameNameFollowingsForbiddenCode is the HTTP code returned for type GetUsersByNameNameFollowingsForbidden
const GetUsersByNameNameFollowingsForbiddenCode int = 403

/*GetUsersByNameNameFollowingsForbidden access denied

swagger:response getUsersByNameNameFollowingsForbidden
*/
type GetUsersByNameNameFollowingsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUsersByNameNameFollowingsForbidden creates GetUsersByNameNameFollowingsForbidden with default headers values
func NewGetUsersByNameNameFollowingsForbidden() *GetUsersByNameNameFollowingsForbidden {
	return &GetUsersByNameNameFollowingsForbidden{}
}

// WithPayload adds the payload to the get users by name name followings forbidden response
func (o *GetUsersByNameNameFollowingsForbidden) WithPayload(payload *models.Error) *GetUsersByNameNameFollowingsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users by name name followings forbidden response
func (o *GetUsersByNameNameFollowingsForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersByNameNameFollowingsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUsersByNameNameFollowingsNotFoundCode is the HTTP code returned for type GetUsersByNameNameFollowingsNotFound
const GetUsersByNameNameFollowingsNotFoundCode int = 404

/*GetUsersByNameNameFollowingsNotFound User not found

swagger:response getUsersByNameNameFollowingsNotFound
*/
type GetUsersByNameNameFollowingsNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUsersByNameNameFollowingsNotFound creates GetUsersByNameNameFollowingsNotFound with default headers values
func NewGetUsersByNameNameFollowingsNotFound() *GetUsersByNameNameFollowingsNotFound {
	return &GetUsersByNameNameFollowingsNotFound{}
}

// WithPayload adds the payload to the get users by name name followings not found response
func (o *GetUsersByNameNameFollowingsNotFound) WithPayload(payload *models.Error) *GetUsersByNameNameFollowingsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users by name name followings not found response
func (o *GetUsersByNameNameFollowingsNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersByNameNameFollowingsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
