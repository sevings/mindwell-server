// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	models "github.com/sevings/mindwell-server/models"
)

// GetUsersNameTlogOKCode is the HTTP code returned for type GetUsersNameTlogOK
const GetUsersNameTlogOKCode int = 200

/*GetUsersNameTlogOK Entry list

swagger:response getUsersNameTlogOK
*/
type GetUsersNameTlogOK struct {

	/*
	  In: Body
	*/
	Payload *models.Feed `json:"body,omitempty"`
}

// NewGetUsersNameTlogOK creates GetUsersNameTlogOK with default headers values
func NewGetUsersNameTlogOK() *GetUsersNameTlogOK {

	return &GetUsersNameTlogOK{}
}

// WithPayload adds the payload to the get users name tlog o k response
func (o *GetUsersNameTlogOK) WithPayload(payload *models.Feed) *GetUsersNameTlogOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users name tlog o k response
func (o *GetUsersNameTlogOK) SetPayload(payload *models.Feed) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersNameTlogOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUsersNameTlogNotFoundCode is the HTTP code returned for type GetUsersNameTlogNotFound
const GetUsersNameTlogNotFoundCode int = 404

/*GetUsersNameTlogNotFound User not found

swagger:response getUsersNameTlogNotFound
*/
type GetUsersNameTlogNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUsersNameTlogNotFound creates GetUsersNameTlogNotFound with default headers values
func NewGetUsersNameTlogNotFound() *GetUsersNameTlogNotFound {

	return &GetUsersNameTlogNotFound{}
}

// WithPayload adds the payload to the get users name tlog not found response
func (o *GetUsersNameTlogNotFound) WithPayload(payload *models.Error) *GetUsersNameTlogNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users name tlog not found response
func (o *GetUsersNameTlogNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersNameTlogNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
