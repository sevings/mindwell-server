// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sevings/yummy-server/models"
)

// GetUsersByNameNameInvitedOKCode is the HTTP code returned for type GetUsersByNameNameInvitedOK
const GetUsersByNameNameInvitedOKCode int = 200

/*GetUsersByNameNameInvitedOK User list

swagger:response getUsersByNameNameInvitedOK
*/
type GetUsersByNameNameInvitedOK struct {

	/*
	  In: Body
	*/
	Payload *models.UserList `json:"body,omitempty"`
}

// NewGetUsersByNameNameInvitedOK creates GetUsersByNameNameInvitedOK with default headers values
func NewGetUsersByNameNameInvitedOK() *GetUsersByNameNameInvitedOK {
	return &GetUsersByNameNameInvitedOK{}
}

// WithPayload adds the payload to the get users by name name invited o k response
func (o *GetUsersByNameNameInvitedOK) WithPayload(payload *models.UserList) *GetUsersByNameNameInvitedOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users by name name invited o k response
func (o *GetUsersByNameNameInvitedOK) SetPayload(payload *models.UserList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersByNameNameInvitedOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUsersByNameNameInvitedForbiddenCode is the HTTP code returned for type GetUsersByNameNameInvitedForbidden
const GetUsersByNameNameInvitedForbiddenCode int = 403

/*GetUsersByNameNameInvitedForbidden access denied

swagger:response getUsersByNameNameInvitedForbidden
*/
type GetUsersByNameNameInvitedForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUsersByNameNameInvitedForbidden creates GetUsersByNameNameInvitedForbidden with default headers values
func NewGetUsersByNameNameInvitedForbidden() *GetUsersByNameNameInvitedForbidden {
	return &GetUsersByNameNameInvitedForbidden{}
}

// WithPayload adds the payload to the get users by name name invited forbidden response
func (o *GetUsersByNameNameInvitedForbidden) WithPayload(payload *models.Error) *GetUsersByNameNameInvitedForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users by name name invited forbidden response
func (o *GetUsersByNameNameInvitedForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersByNameNameInvitedForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUsersByNameNameInvitedNotFoundCode is the HTTP code returned for type GetUsersByNameNameInvitedNotFound
const GetUsersByNameNameInvitedNotFoundCode int = 404

/*GetUsersByNameNameInvitedNotFound User not found

swagger:response getUsersByNameNameInvitedNotFound
*/
type GetUsersByNameNameInvitedNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUsersByNameNameInvitedNotFound creates GetUsersByNameNameInvitedNotFound with default headers values
func NewGetUsersByNameNameInvitedNotFound() *GetUsersByNameNameInvitedNotFound {
	return &GetUsersByNameNameInvitedNotFound{}
}

// WithPayload adds the payload to the get users by name name invited not found response
func (o *GetUsersByNameNameInvitedNotFound) WithPayload(payload *models.Error) *GetUsersByNameNameInvitedNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users by name name invited not found response
func (o *GetUsersByNameNameInvitedNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersByNameNameInvitedNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
