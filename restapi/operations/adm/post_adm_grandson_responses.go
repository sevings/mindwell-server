// Code generated by go-swagger; DO NOT EDIT.

package adm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	models "github.com/sevings/mindwell-server/models"
)

// PostAdmGrandsonOKCode is the HTTP code returned for type PostAdmGrandsonOK
const PostAdmGrandsonOKCode int = 200

/*PostAdmGrandsonOK OK

swagger:response postAdmGrandsonOK
*/
type PostAdmGrandsonOK struct {
}

// NewPostAdmGrandsonOK creates PostAdmGrandsonOK with default headers values
func NewPostAdmGrandsonOK() *PostAdmGrandsonOK {

	return &PostAdmGrandsonOK{}
}

// WriteResponse to the client
func (o *PostAdmGrandsonOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// PostAdmGrandsonGoneCode is the HTTP code returned for type PostAdmGrandsonGone
const PostAdmGrandsonGoneCode int = 410

/*PostAdmGrandsonGone registration finished

swagger:response postAdmGrandsonGone
*/
type PostAdmGrandsonGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostAdmGrandsonGone creates PostAdmGrandsonGone with default headers values
func NewPostAdmGrandsonGone() *PostAdmGrandsonGone {

	return &PostAdmGrandsonGone{}
}

// WithPayload adds the payload to the post adm grandson gone response
func (o *PostAdmGrandsonGone) WithPayload(payload *models.Error) *PostAdmGrandsonGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post adm grandson gone response
func (o *PostAdmGrandsonGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAdmGrandsonGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
