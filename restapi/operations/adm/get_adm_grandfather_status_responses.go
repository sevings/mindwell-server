// Code generated by go-swagger; DO NOT EDIT.

package adm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/sevings/mindwell-server/models"
)

// GetAdmGrandfatherStatusOKCode is the HTTP code returned for type GetAdmGrandfatherStatusOK
const GetAdmGrandfatherStatusOKCode int = 200

/*GetAdmGrandfatherStatusOK status of your gifts

swagger:response getAdmGrandfatherStatusOK
*/
type GetAdmGrandfatherStatusOK struct {

	/*
	  In: Body
	*/
	Payload *GetAdmGrandfatherStatusOKBody `json:"body,omitempty"`
}

// NewGetAdmGrandfatherStatusOK creates GetAdmGrandfatherStatusOK with default headers values
func NewGetAdmGrandfatherStatusOK() *GetAdmGrandfatherStatusOK {

	return &GetAdmGrandfatherStatusOK{}
}

// WithPayload adds the payload to the get adm grandfather status o k response
func (o *GetAdmGrandfatherStatusOK) WithPayload(payload *GetAdmGrandfatherStatusOKBody) *GetAdmGrandfatherStatusOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get adm grandfather status o k response
func (o *GetAdmGrandfatherStatusOK) SetPayload(payload *GetAdmGrandfatherStatusOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAdmGrandfatherStatusOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAdmGrandfatherStatusForbiddenCode is the HTTP code returned for type GetAdmGrandfatherStatusForbidden
const GetAdmGrandfatherStatusForbiddenCode int = 403

/*GetAdmGrandfatherStatusForbidden you're not registered in adm

swagger:response getAdmGrandfatherStatusForbidden
*/
type GetAdmGrandfatherStatusForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAdmGrandfatherStatusForbidden creates GetAdmGrandfatherStatusForbidden with default headers values
func NewGetAdmGrandfatherStatusForbidden() *GetAdmGrandfatherStatusForbidden {

	return &GetAdmGrandfatherStatusForbidden{}
}

// WithPayload adds the payload to the get adm grandfather status forbidden response
func (o *GetAdmGrandfatherStatusForbidden) WithPayload(payload *models.Error) *GetAdmGrandfatherStatusForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get adm grandfather status forbidden response
func (o *GetAdmGrandfatherStatusForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAdmGrandfatherStatusForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAdmGrandfatherStatusGoneCode is the HTTP code returned for type GetAdmGrandfatherStatusGone
const GetAdmGrandfatherStatusGoneCode int = 410

/*GetAdmGrandfatherStatusGone adm finished

swagger:response getAdmGrandfatherStatusGone
*/
type GetAdmGrandfatherStatusGone struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAdmGrandfatherStatusGone creates GetAdmGrandfatherStatusGone with default headers values
func NewGetAdmGrandfatherStatusGone() *GetAdmGrandfatherStatusGone {

	return &GetAdmGrandfatherStatusGone{}
}

// WithPayload adds the payload to the get adm grandfather status gone response
func (o *GetAdmGrandfatherStatusGone) WithPayload(payload *models.Error) *GetAdmGrandfatherStatusGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get adm grandfather status gone response
func (o *GetAdmGrandfatherStatusGone) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAdmGrandfatherStatusGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
