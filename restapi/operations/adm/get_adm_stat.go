// Code generated by go-swagger; DO NOT EDIT.

package adm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/sevings/mindwell-server/models"
)

// GetAdmStatHandlerFunc turns a function with the right signature into a get adm stat handler
type GetAdmStatHandlerFunc func(GetAdmStatParams, *models.UserID) middleware.Responder

// Handle executing the request and returning a response
func (fn GetAdmStatHandlerFunc) Handle(params GetAdmStatParams, principal *models.UserID) middleware.Responder {
	return fn(params, principal)
}

// GetAdmStatHandler interface for that can handle valid get adm stat params
type GetAdmStatHandler interface {
	Handle(GetAdmStatParams, *models.UserID) middleware.Responder
}

// NewGetAdmStat creates a new http.Handler for the get adm stat operation
func NewGetAdmStat(ctx *middleware.Context, handler GetAdmStatHandler) *GetAdmStat {
	return &GetAdmStat{Context: ctx, Handler: handler}
}

/*GetAdmStat swagger:route GET /adm/stat adm getAdmStat

GetAdmStat get adm stat API

*/
type GetAdmStat struct {
	Context *middleware.Context
	Handler GetAdmStatHandler
}

func (o *GetAdmStat) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetAdmStatParams()

	uprinc, aCtx, err := o.Context.Authorize(r, route)
	if err != nil {
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}
	if aCtx != nil {
		r = aCtx
	}
	var principal *models.UserID
	if uprinc != nil {
		principal = uprinc.(*models.UserID) // this is really a models.UserID, I promise
	}

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params, principal) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GetAdmStatOKBody get adm stat o k body
//
// swagger:model GetAdmStatOKBody
type GetAdmStatOKBody struct {

	// grandsons
	Grandsons int64 `json:"grandsons,omitempty"`

	// received
	Received int64 `json:"received,omitempty"`

	// sent
	Sent int64 `json:"sent,omitempty"`
}

// Validate validates this get adm stat o k body
func (o *GetAdmStatOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAdmStatOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAdmStatOKBody) UnmarshalBinary(b []byte) error {
	var res GetAdmStatOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
