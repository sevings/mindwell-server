// Code generated by go-swagger; DO NOT EDIT.

package adm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
	strfmt "github.com/go-openapi/strfmt"
	swag "github.com/go-openapi/swag"

	models "github.com/sevings/mindwell-server/models"
)

// GetAdmGrandfatherStatusHandlerFunc turns a function with the right signature into a get adm grandfather status handler
type GetAdmGrandfatherStatusHandlerFunc func(GetAdmGrandfatherStatusParams, *models.UserID) middleware.Responder

// Handle executing the request and returning a response
func (fn GetAdmGrandfatherStatusHandlerFunc) Handle(params GetAdmGrandfatherStatusParams, principal *models.UserID) middleware.Responder {
	return fn(params, principal)
}

// GetAdmGrandfatherStatusHandler interface for that can handle valid get adm grandfather status params
type GetAdmGrandfatherStatusHandler interface {
	Handle(GetAdmGrandfatherStatusParams, *models.UserID) middleware.Responder
}

// NewGetAdmGrandfatherStatus creates a new http.Handler for the get adm grandfather status operation
func NewGetAdmGrandfatherStatus(ctx *middleware.Context, handler GetAdmGrandfatherStatusHandler) *GetAdmGrandfatherStatus {
	return &GetAdmGrandfatherStatus{Context: ctx, Handler: handler}
}

/*GetAdmGrandfatherStatus swagger:route GET /adm/grandfather/status adm getAdmGrandfatherStatus

GetAdmGrandfatherStatus get adm grandfather status API

*/
type GetAdmGrandfatherStatus struct {
	Context *middleware.Context
	Handler GetAdmGrandfatherStatusHandler
}

func (o *GetAdmGrandfatherStatus) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetAdmGrandfatherStatusParams()

	uprinc, aCtx, err := o.Context.Authorize(r, route)
	if err != nil {
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}
	if aCtx != nil {
		r = aCtx
	}
	var principal *models.UserID
	if uprinc != nil {
		principal = uprinc.(*models.UserID) // this is really a models.UserID, I promise
	}

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params, principal) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GetAdmGrandfatherStatusOKBody get adm grandfather status o k body
// swagger:model GetAdmGrandfatherStatusOKBody
type GetAdmGrandfatherStatusOKBody struct {

	// received
	Received bool `json:"received,omitempty"`

	// sent
	Sent bool `json:"sent,omitempty"`
}

// Validate validates this get adm grandfather status o k body
func (o *GetAdmGrandfatherStatusOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAdmGrandfatherStatusOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAdmGrandfatherStatusOKBody) UnmarshalBinary(b []byte) error {
	var res GetAdmGrandfatherStatusOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
