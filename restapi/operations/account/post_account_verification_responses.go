// Code generated by go-swagger; DO NOT EDIT.

package account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	models "github.com/sevings/mindwell-server/models"
)

// PostAccountVerificationOKCode is the HTTP code returned for type PostAccountVerificationOK
const PostAccountVerificationOKCode int = 200

/*PostAccountVerificationOK email has been sent

swagger:response postAccountVerificationOK
*/
type PostAccountVerificationOK struct {
}

// NewPostAccountVerificationOK creates PostAccountVerificationOK with default headers values
func NewPostAccountVerificationOK() *PostAccountVerificationOK {

	return &PostAccountVerificationOK{}
}

// WriteResponse to the client
func (o *PostAccountVerificationOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// PostAccountVerificationForbiddenCode is the HTTP code returned for type PostAccountVerificationForbidden
const PostAccountVerificationForbiddenCode int = 403

/*PostAccountVerificationForbidden access denied

swagger:response postAccountVerificationForbidden
*/
type PostAccountVerificationForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostAccountVerificationForbidden creates PostAccountVerificationForbidden with default headers values
func NewPostAccountVerificationForbidden() *PostAccountVerificationForbidden {

	return &PostAccountVerificationForbidden{}
}

// WithPayload adds the payload to the post account verification forbidden response
func (o *PostAccountVerificationForbidden) WithPayload(payload *models.Error) *PostAccountVerificationForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post account verification forbidden response
func (o *PostAccountVerificationForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAccountVerificationForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
