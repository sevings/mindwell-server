// Code generated by go-swagger; DO NOT EDIT.

package images

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/sevings/mindwell-server/models"
)

// GetImagesIDOKCode is the HTTP code returned for type GetImagesIDOK
const GetImagesIDOKCode int = 200

/*GetImagesIDOK Image

swagger:response getImagesIdOK
*/
type GetImagesIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.Image `json:"body,omitempty"`
}

// NewGetImagesIDOK creates GetImagesIDOK with default headers values
func NewGetImagesIDOK() *GetImagesIDOK {

	return &GetImagesIDOK{}
}

// WithPayload adds the payload to the get images Id o k response
func (o *GetImagesIDOK) WithPayload(payload *models.Image) *GetImagesIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get images Id o k response
func (o *GetImagesIDOK) SetPayload(payload *models.Image) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetImagesIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetImagesIDForbiddenCode is the HTTP code returned for type GetImagesIDForbidden
const GetImagesIDForbiddenCode int = 403

/*GetImagesIDForbidden access denied

swagger:response getImagesIdForbidden
*/
type GetImagesIDForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetImagesIDForbidden creates GetImagesIDForbidden with default headers values
func NewGetImagesIDForbidden() *GetImagesIDForbidden {

	return &GetImagesIDForbidden{}
}

// WithPayload adds the payload to the get images Id forbidden response
func (o *GetImagesIDForbidden) WithPayload(payload *models.Error) *GetImagesIDForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get images Id forbidden response
func (o *GetImagesIDForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetImagesIDForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetImagesIDNotFoundCode is the HTTP code returned for type GetImagesIDNotFound
const GetImagesIDNotFoundCode int = 404

/*GetImagesIDNotFound Image not found

swagger:response getImagesIdNotFound
*/
type GetImagesIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetImagesIDNotFound creates GetImagesIDNotFound with default headers values
func NewGetImagesIDNotFound() *GetImagesIDNotFound {

	return &GetImagesIDNotFound{}
}

// WithPayload adds the payload to the get images Id not found response
func (o *GetImagesIDNotFound) WithPayload(payload *models.Error) *GetImagesIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get images Id not found response
func (o *GetImagesIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetImagesIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
