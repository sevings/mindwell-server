// Code generated by go-swagger; DO NOT EDIT.

package me

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sevings/mindwell-server/models"
)

// PutUsersMeAvatarOKCode is the HTTP code returned for type PutUsersMeAvatarOK
const PutUsersMeAvatarOKCode int = 200

/*PutUsersMeAvatarOK Avatar

swagger:response putUsersMeAvatarOK
*/
type PutUsersMeAvatarOK struct {

	/*
	  In: Body
	*/
	Payload *models.Avatar `json:"body,omitempty"`
}

// NewPutUsersMeAvatarOK creates PutUsersMeAvatarOK with default headers values
func NewPutUsersMeAvatarOK() *PutUsersMeAvatarOK {
	return &PutUsersMeAvatarOK{}
}

// WithPayload adds the payload to the put users me avatar o k response
func (o *PutUsersMeAvatarOK) WithPayload(payload *models.Avatar) *PutUsersMeAvatarOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put users me avatar o k response
func (o *PutUsersMeAvatarOK) SetPayload(payload *models.Avatar) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutUsersMeAvatarOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutUsersMeAvatarBadRequestCode is the HTTP code returned for type PutUsersMeAvatarBadRequest
const PutUsersMeAvatarBadRequestCode int = 400

/*PutUsersMeAvatarBadRequest bad request

swagger:response putUsersMeAvatarBadRequest
*/
type PutUsersMeAvatarBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutUsersMeAvatarBadRequest creates PutUsersMeAvatarBadRequest with default headers values
func NewPutUsersMeAvatarBadRequest() *PutUsersMeAvatarBadRequest {
	return &PutUsersMeAvatarBadRequest{}
}

// WithPayload adds the payload to the put users me avatar bad request response
func (o *PutUsersMeAvatarBadRequest) WithPayload(payload *models.Error) *PutUsersMeAvatarBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put users me avatar bad request response
func (o *PutUsersMeAvatarBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutUsersMeAvatarBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
