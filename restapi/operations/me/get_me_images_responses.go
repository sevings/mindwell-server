// Code generated by go-swagger; DO NOT EDIT.

package me

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sevings/mindwell-server/models"
)

// GetMeImagesOKCode is the HTTP code returned for type GetMeImagesOK
const GetMeImagesOKCode int = 200

/*GetMeImagesOK Image list

swagger:response getMeImagesOK
*/
type GetMeImagesOK struct {

	/*
	  In: Body
	*/
	Payload *models.ImageList `json:"body,omitempty"`
}

// NewGetMeImagesOK creates GetMeImagesOK with default headers values
func NewGetMeImagesOK() *GetMeImagesOK {

	return &GetMeImagesOK{}
}

// WithPayload adds the payload to the get me images o k response
func (o *GetMeImagesOK) WithPayload(payload *models.ImageList) *GetMeImagesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get me images o k response
func (o *GetMeImagesOK) SetPayload(payload *models.ImageList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMeImagesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMeImagesNotFoundCode is the HTTP code returned for type GetMeImagesNotFound
const GetMeImagesNotFoundCode int = 404

/*GetMeImagesNotFound User not found

swagger:response getMeImagesNotFound
*/
type GetMeImagesNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetMeImagesNotFound creates GetMeImagesNotFound with default headers values
func NewGetMeImagesNotFound() *GetMeImagesNotFound {

	return &GetMeImagesNotFound{}
}

// WithPayload adds the payload to the get me images not found response
func (o *GetMeImagesNotFound) WithPayload(payload *models.Error) *GetMeImagesNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get me images not found response
func (o *GetMeImagesNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMeImagesNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
