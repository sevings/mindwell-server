// Code generated by go-swagger; DO NOT EDIT.

package me

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sevings/mindwell-server/models"
)

// GetMeRequestedOKCode is the HTTP code returned for type GetMeRequestedOK
const GetMeRequestedOKCode int = 200

/*GetMeRequestedOK User list

swagger:response getMeRequestedOK
*/
type GetMeRequestedOK struct {

	/*
	  In: Body
	*/
	Payload *models.FriendList `json:"body,omitempty"`
}

// NewGetMeRequestedOK creates GetMeRequestedOK with default headers values
func NewGetMeRequestedOK() *GetMeRequestedOK {
	return &GetMeRequestedOK{}
}

// WithPayload adds the payload to the get me requested o k response
func (o *GetMeRequestedOK) WithPayload(payload *models.FriendList) *GetMeRequestedOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get me requested o k response
func (o *GetMeRequestedOK) SetPayload(payload *models.FriendList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMeRequestedOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMeRequestedForbiddenCode is the HTTP code returned for type GetMeRequestedForbidden
const GetMeRequestedForbiddenCode int = 403

/*GetMeRequestedForbidden access denied

swagger:response getMeRequestedForbidden
*/
type GetMeRequestedForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetMeRequestedForbidden creates GetMeRequestedForbidden with default headers values
func NewGetMeRequestedForbidden() *GetMeRequestedForbidden {
	return &GetMeRequestedForbidden{}
}

// WithPayload adds the payload to the get me requested forbidden response
func (o *GetMeRequestedForbidden) WithPayload(payload *models.Error) *GetMeRequestedForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get me requested forbidden response
func (o *GetMeRequestedForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMeRequestedForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
