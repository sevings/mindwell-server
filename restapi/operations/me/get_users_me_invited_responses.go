// Code generated by go-swagger; DO NOT EDIT.

package me

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sevings/mindwell-server/models"
)

// GetUsersMeInvitedOKCode is the HTTP code returned for type GetUsersMeInvitedOK
const GetUsersMeInvitedOKCode int = 200

/*GetUsersMeInvitedOK User list

swagger:response getUsersMeInvitedOK
*/
type GetUsersMeInvitedOK struct {

	/*
	  In: Body
	*/
	Payload *models.FriendList `json:"body,omitempty"`
}

// NewGetUsersMeInvitedOK creates GetUsersMeInvitedOK with default headers values
func NewGetUsersMeInvitedOK() *GetUsersMeInvitedOK {
	return &GetUsersMeInvitedOK{}
}

// WithPayload adds the payload to the get users me invited o k response
func (o *GetUsersMeInvitedOK) WithPayload(payload *models.FriendList) *GetUsersMeInvitedOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users me invited o k response
func (o *GetUsersMeInvitedOK) SetPayload(payload *models.FriendList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersMeInvitedOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUsersMeInvitedForbiddenCode is the HTTP code returned for type GetUsersMeInvitedForbidden
const GetUsersMeInvitedForbiddenCode int = 403

/*GetUsersMeInvitedForbidden access denied

swagger:response getUsersMeInvitedForbidden
*/
type GetUsersMeInvitedForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUsersMeInvitedForbidden creates GetUsersMeInvitedForbidden with default headers values
func NewGetUsersMeInvitedForbidden() *GetUsersMeInvitedForbidden {
	return &GetUsersMeInvitedForbidden{}
}

// WithPayload adds the payload to the get users me invited forbidden response
func (o *GetUsersMeInvitedForbidden) WithPayload(payload *models.Error) *GetUsersMeInvitedForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users me invited forbidden response
func (o *GetUsersMeInvitedForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersMeInvitedForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
