// Code generated by go-swagger; DO NOT EDIT.

package me

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sevings/mindwell-server/models"
)

// GetMeWatchingOKCode is the HTTP code returned for type GetMeWatchingOK
const GetMeWatchingOKCode int = 200

/*GetMeWatchingOK Entry list

swagger:response getMeWatchingOK
*/
type GetMeWatchingOK struct {

	/*
	  In: Body
	*/
	Payload *models.Feed `json:"body,omitempty"`
}

// NewGetMeWatchingOK creates GetMeWatchingOK with default headers values
func NewGetMeWatchingOK() *GetMeWatchingOK {
	return &GetMeWatchingOK{}
}

// WithPayload adds the payload to the get me watching o k response
func (o *GetMeWatchingOK) WithPayload(payload *models.Feed) *GetMeWatchingOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get me watching o k response
func (o *GetMeWatchingOK) SetPayload(payload *models.Feed) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMeWatchingOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMeWatchingForbiddenCode is the HTTP code returned for type GetMeWatchingForbidden
const GetMeWatchingForbiddenCode int = 403

/*GetMeWatchingForbidden access denied

swagger:response getMeWatchingForbidden
*/
type GetMeWatchingForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetMeWatchingForbidden creates GetMeWatchingForbidden with default headers values
func NewGetMeWatchingForbidden() *GetMeWatchingForbidden {
	return &GetMeWatchingForbidden{}
}

// WithPayload adds the payload to the get me watching forbidden response
func (o *GetMeWatchingForbidden) WithPayload(payload *models.Error) *GetMeWatchingForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get me watching forbidden response
func (o *GetMeWatchingForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMeWatchingForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
