// Code generated by go-swagger; DO NOT EDIT.

package oauth2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sevings/mindwell-server/models"
)

// GetOauth2AppsIDOKCode is the HTTP code returned for type GetOauth2AppsIDOK
const GetOauth2AppsIDOKCode int = 200

/*GetOauth2AppsIDOK app info

swagger:response getOauth2AppsIdOK
*/
type GetOauth2AppsIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.App `json:"body,omitempty"`
}

// NewGetOauth2AppsIDOK creates GetOauth2AppsIDOK with default headers values
func NewGetOauth2AppsIDOK() *GetOauth2AppsIDOK {

	return &GetOauth2AppsIDOK{}
}

// WithPayload adds the payload to the get oauth2 apps Id o k response
func (o *GetOauth2AppsIDOK) WithPayload(payload *models.App) *GetOauth2AppsIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get oauth2 apps Id o k response
func (o *GetOauth2AppsIDOK) SetPayload(payload *models.App) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOauth2AppsIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetOauth2AppsIDNotFoundCode is the HTTP code returned for type GetOauth2AppsIDNotFound
const GetOauth2AppsIDNotFoundCode int = 404

/*GetOauth2AppsIDNotFound not found

swagger:response getOauth2AppsIdNotFound
*/
type GetOauth2AppsIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetOauth2AppsIDNotFound creates GetOauth2AppsIDNotFound with default headers values
func NewGetOauth2AppsIDNotFound() *GetOauth2AppsIDNotFound {

	return &GetOauth2AppsIDNotFound{}
}

// WithPayload adds the payload to the get oauth2 apps Id not found response
func (o *GetOauth2AppsIDNotFound) WithPayload(payload *models.Error) *GetOauth2AppsIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get oauth2 apps Id not found response
func (o *GetOauth2AppsIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOauth2AppsIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
