// Code generated by go-swagger; DO NOT EDIT.

package oauth2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sevings/mindwell-server/models"
)

// PostOauth2UpgradeOKCode is the HTTP code returned for type PostOauth2UpgradeOK
const PostOauth2UpgradeOKCode int = 200

/*PostOauth2UpgradeOK authorized

swagger:response postOauth2UpgradeOK
*/
type PostOauth2UpgradeOK struct {

	/*
	  In: Body
	*/
	Payload *models.OAuth2Token `json:"body,omitempty"`
}

// NewPostOauth2UpgradeOK creates PostOauth2UpgradeOK with default headers values
func NewPostOauth2UpgradeOK() *PostOauth2UpgradeOK {

	return &PostOauth2UpgradeOK{}
}

// WithPayload adds the payload to the post oauth2 upgrade o k response
func (o *PostOauth2UpgradeOK) WithPayload(payload *models.OAuth2Token) *PostOauth2UpgradeOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post oauth2 upgrade o k response
func (o *PostOauth2UpgradeOK) SetPayload(payload *models.OAuth2Token) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostOauth2UpgradeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostOauth2UpgradeBadRequestCode is the HTTP code returned for type PostOauth2UpgradeBadRequest
const PostOauth2UpgradeBadRequestCode int = 400

/*PostOauth2UpgradeBadRequest some error happened

swagger:response postOauth2UpgradeBadRequest
*/
type PostOauth2UpgradeBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.OAuth2Error `json:"body,omitempty"`
}

// NewPostOauth2UpgradeBadRequest creates PostOauth2UpgradeBadRequest with default headers values
func NewPostOauth2UpgradeBadRequest() *PostOauth2UpgradeBadRequest {

	return &PostOauth2UpgradeBadRequest{}
}

// WithPayload adds the payload to the post oauth2 upgrade bad request response
func (o *PostOauth2UpgradeBadRequest) WithPayload(payload *models.OAuth2Error) *PostOauth2UpgradeBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post oauth2 upgrade bad request response
func (o *PostOauth2UpgradeBadRequest) SetPayload(payload *models.OAuth2Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostOauth2UpgradeBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostOauth2UpgradeUnauthorizedCode is the HTTP code returned for type PostOauth2UpgradeUnauthorized
const PostOauth2UpgradeUnauthorizedCode int = 401

/*PostOauth2UpgradeUnauthorized invalid client

swagger:response postOauth2UpgradeUnauthorized
*/
type PostOauth2UpgradeUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.OAuth2Error `json:"body,omitempty"`
}

// NewPostOauth2UpgradeUnauthorized creates PostOauth2UpgradeUnauthorized with default headers values
func NewPostOauth2UpgradeUnauthorized() *PostOauth2UpgradeUnauthorized {

	return &PostOauth2UpgradeUnauthorized{}
}

// WithPayload adds the payload to the post oauth2 upgrade unauthorized response
func (o *PostOauth2UpgradeUnauthorized) WithPayload(payload *models.OAuth2Error) *PostOauth2UpgradeUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post oauth2 upgrade unauthorized response
func (o *PostOauth2UpgradeUnauthorized) SetPayload(payload *models.OAuth2Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostOauth2UpgradeUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
