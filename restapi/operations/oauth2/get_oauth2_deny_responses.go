// Code generated by go-swagger; DO NOT EDIT.

package oauth2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sevings/mindwell-server/models"
)

// GetOauth2DenyBadRequestCode is the HTTP code returned for type GetOauth2DenyBadRequest
const GetOauth2DenyBadRequestCode int = 400

/*GetOauth2DenyBadRequest some error happened

swagger:response getOauth2DenyBadRequest
*/
type GetOauth2DenyBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.OAuth2Error `json:"body,omitempty"`
}

// NewGetOauth2DenyBadRequest creates GetOauth2DenyBadRequest with default headers values
func NewGetOauth2DenyBadRequest() *GetOauth2DenyBadRequest {

	return &GetOauth2DenyBadRequest{}
}

// WithPayload adds the payload to the get oauth2 deny bad request response
func (o *GetOauth2DenyBadRequest) WithPayload(payload *models.OAuth2Error) *GetOauth2DenyBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get oauth2 deny bad request response
func (o *GetOauth2DenyBadRequest) SetPayload(payload *models.OAuth2Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOauth2DenyBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
