// Code generated by go-swagger; DO NOT EDIT.

package oauth2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sevings/mindwell-server/models"
)

// PostOauth2AllowOKCode is the HTTP code returned for type PostOauth2AllowOK
const PostOauth2AllowOKCode int = 200

/*PostOauth2AllowOK auth code

swagger:response postOauth2AllowOK
*/
type PostOauth2AllowOK struct {

	/*
	  In: Body
	*/
	Payload *PostOauth2AllowOKBody `json:"body,omitempty"`
}

// NewPostOauth2AllowOK creates PostOauth2AllowOK with default headers values
func NewPostOauth2AllowOK() *PostOauth2AllowOK {

	return &PostOauth2AllowOK{}
}

// WithPayload adds the payload to the post oauth2 allow o k response
func (o *PostOauth2AllowOK) WithPayload(payload *PostOauth2AllowOKBody) *PostOauth2AllowOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post oauth2 allow o k response
func (o *PostOauth2AllowOK) SetPayload(payload *PostOauth2AllowOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostOauth2AllowOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostOauth2AllowBadRequestCode is the HTTP code returned for type PostOauth2AllowBadRequest
const PostOauth2AllowBadRequestCode int = 400

/*PostOauth2AllowBadRequest some error happened

swagger:response postOauth2AllowBadRequest
*/
type PostOauth2AllowBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.OAuth2Error `json:"body,omitempty"`
}

// NewPostOauth2AllowBadRequest creates PostOauth2AllowBadRequest with default headers values
func NewPostOauth2AllowBadRequest() *PostOauth2AllowBadRequest {

	return &PostOauth2AllowBadRequest{}
}

// WithPayload adds the payload to the post oauth2 allow bad request response
func (o *PostOauth2AllowBadRequest) WithPayload(payload *models.OAuth2Error) *PostOauth2AllowBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post oauth2 allow bad request response
func (o *PostOauth2AllowBadRequest) SetPayload(payload *models.OAuth2Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostOauth2AllowBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostOauth2AllowUnauthorizedCode is the HTTP code returned for type PostOauth2AllowUnauthorized
const PostOauth2AllowUnauthorizedCode int = 401

/*PostOauth2AllowUnauthorized invalid client

swagger:response postOauth2AllowUnauthorized
*/
type PostOauth2AllowUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.OAuth2Error `json:"body,omitempty"`
}

// NewPostOauth2AllowUnauthorized creates PostOauth2AllowUnauthorized with default headers values
func NewPostOauth2AllowUnauthorized() *PostOauth2AllowUnauthorized {

	return &PostOauth2AllowUnauthorized{}
}

// WithPayload adds the payload to the post oauth2 allow unauthorized response
func (o *PostOauth2AllowUnauthorized) WithPayload(payload *models.OAuth2Error) *PostOauth2AllowUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post oauth2 allow unauthorized response
func (o *PostOauth2AllowUnauthorized) SetPayload(payload *models.OAuth2Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostOauth2AllowUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
