// Code generated by go-swagger; DO NOT EDIT.

package relations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	models "github.com/sevings/mindwell-server/models"
)

// GetRelationsFromNameOKCode is the HTTP code returned for type GetRelationsFromNameOK
const GetRelationsFromNameOKCode int = 200

/*GetRelationsFromNameOK the user relationship with you

swagger:response getRelationsFromNameOK
*/
type GetRelationsFromNameOK struct {

	/*
	  In: Body
	*/
	Payload *models.Relationship `json:"body,omitempty"`
}

// NewGetRelationsFromNameOK creates GetRelationsFromNameOK with default headers values
func NewGetRelationsFromNameOK() *GetRelationsFromNameOK {

	return &GetRelationsFromNameOK{}
}

// WithPayload adds the payload to the get relations from name o k response
func (o *GetRelationsFromNameOK) WithPayload(payload *models.Relationship) *GetRelationsFromNameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get relations from name o k response
func (o *GetRelationsFromNameOK) SetPayload(payload *models.Relationship) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRelationsFromNameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRelationsFromNameNotFoundCode is the HTTP code returned for type GetRelationsFromNameNotFound
const GetRelationsFromNameNotFoundCode int = 404

/*GetRelationsFromNameNotFound User not found

swagger:response getRelationsFromNameNotFound
*/
type GetRelationsFromNameNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetRelationsFromNameNotFound creates GetRelationsFromNameNotFound with default headers values
func NewGetRelationsFromNameNotFound() *GetRelationsFromNameNotFound {

	return &GetRelationsFromNameNotFound{}
}

// WithPayload adds the payload to the get relations from name not found response
func (o *GetRelationsFromNameNotFound) WithPayload(payload *models.Error) *GetRelationsFromNameNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get relations from name not found response
func (o *GetRelationsFromNameNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRelationsFromNameNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
