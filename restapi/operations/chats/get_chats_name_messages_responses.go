// Code generated by go-swagger; DO NOT EDIT.

package chats

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/sevings/mindwell-server/models"
)

// GetChatsNameMessagesOKCode is the HTTP code returned for type GetChatsNameMessagesOK
const GetChatsNameMessagesOKCode int = 200

/*GetChatsNameMessagesOK message list

swagger:response getChatsNameMessagesOK
*/
type GetChatsNameMessagesOK struct {

	/*
	  In: Body
	*/
	Payload *models.MessageList `json:"body,omitempty"`
}

// NewGetChatsNameMessagesOK creates GetChatsNameMessagesOK with default headers values
func NewGetChatsNameMessagesOK() *GetChatsNameMessagesOK {

	return &GetChatsNameMessagesOK{}
}

// WithPayload adds the payload to the get chats name messages o k response
func (o *GetChatsNameMessagesOK) WithPayload(payload *models.MessageList) *GetChatsNameMessagesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get chats name messages o k response
func (o *GetChatsNameMessagesOK) SetPayload(payload *models.MessageList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetChatsNameMessagesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetChatsNameMessagesNotFoundCode is the HTTP code returned for type GetChatsNameMessagesNotFound
const GetChatsNameMessagesNotFoundCode int = 404

/*GetChatsNameMessagesNotFound Chat not found

swagger:response getChatsNameMessagesNotFound
*/
type GetChatsNameMessagesNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetChatsNameMessagesNotFound creates GetChatsNameMessagesNotFound with default headers values
func NewGetChatsNameMessagesNotFound() *GetChatsNameMessagesNotFound {

	return &GetChatsNameMessagesNotFound{}
}

// WithPayload adds the payload to the get chats name messages not found response
func (o *GetChatsNameMessagesNotFound) WithPayload(payload *models.Error) *GetChatsNameMessagesNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get chats name messages not found response
func (o *GetChatsNameMessagesNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetChatsNameMessagesNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
