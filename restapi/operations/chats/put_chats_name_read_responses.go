// Code generated by go-swagger; DO NOT EDIT.

package chats

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/sevings/mindwell-server/models"
)

// PutChatsNameReadOKCode is the HTTP code returned for type PutChatsNameReadOK
const PutChatsNameReadOKCode int = 200

/*PutChatsNameReadOK unread count

swagger:response putChatsNameReadOK
*/
type PutChatsNameReadOK struct {

	/*
	  In: Body
	*/
	Payload *PutChatsNameReadOKBody `json:"body,omitempty"`
}

// NewPutChatsNameReadOK creates PutChatsNameReadOK with default headers values
func NewPutChatsNameReadOK() *PutChatsNameReadOK {

	return &PutChatsNameReadOK{}
}

// WithPayload adds the payload to the put chats name read o k response
func (o *PutChatsNameReadOK) WithPayload(payload *PutChatsNameReadOKBody) *PutChatsNameReadOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put chats name read o k response
func (o *PutChatsNameReadOK) SetPayload(payload *PutChatsNameReadOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutChatsNameReadOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutChatsNameReadNotFoundCode is the HTTP code returned for type PutChatsNameReadNotFound
const PutChatsNameReadNotFoundCode int = 404

/*PutChatsNameReadNotFound Chat not found

swagger:response putChatsNameReadNotFound
*/
type PutChatsNameReadNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutChatsNameReadNotFound creates PutChatsNameReadNotFound with default headers values
func NewPutChatsNameReadNotFound() *PutChatsNameReadNotFound {

	return &PutChatsNameReadNotFound{}
}

// WithPayload adds the payload to the put chats name read not found response
func (o *PutChatsNameReadNotFound) WithPayload(payload *models.Error) *PutChatsNameReadNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put chats name read not found response
func (o *PutChatsNameReadNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutChatsNameReadNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
