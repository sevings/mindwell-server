// Code generated by go-swagger; DO NOT EDIT.

package chats

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/sevings/mindwell-server/models"
)

// GetChatsNameOKCode is the HTTP code returned for type GetChatsNameOK
const GetChatsNameOKCode int = 200

/*GetChatsNameOK Chat info

swagger:response getChatsNameOK
*/
type GetChatsNameOK struct {

	/*
	  In: Body
	*/
	Payload *models.Chat `json:"body,omitempty"`
}

// NewGetChatsNameOK creates GetChatsNameOK with default headers values
func NewGetChatsNameOK() *GetChatsNameOK {

	return &GetChatsNameOK{}
}

// WithPayload adds the payload to the get chats name o k response
func (o *GetChatsNameOK) WithPayload(payload *models.Chat) *GetChatsNameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get chats name o k response
func (o *GetChatsNameOK) SetPayload(payload *models.Chat) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetChatsNameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetChatsNameNotFoundCode is the HTTP code returned for type GetChatsNameNotFound
const GetChatsNameNotFoundCode int = 404

/*GetChatsNameNotFound Chat not found

swagger:response getChatsNameNotFound
*/
type GetChatsNameNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetChatsNameNotFound creates GetChatsNameNotFound with default headers values
func NewGetChatsNameNotFound() *GetChatsNameNotFound {

	return &GetChatsNameNotFound{}
}

// WithPayload adds the payload to the get chats name not found response
func (o *GetChatsNameNotFound) WithPayload(payload *models.Error) *GetChatsNameNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get chats name not found response
func (o *GetChatsNameNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetChatsNameNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
