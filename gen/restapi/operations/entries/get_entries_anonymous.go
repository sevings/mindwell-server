// Code generated by go-swagger; DO NOT EDIT.

package entries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetEntriesAnonymousHandlerFunc turns a function with the right signature into a get entries anonymous handler
type GetEntriesAnonymousHandlerFunc func(GetEntriesAnonymousParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetEntriesAnonymousHandlerFunc) Handle(params GetEntriesAnonymousParams) middleware.Responder {
	return fn(params)
}

// GetEntriesAnonymousHandler interface for that can handle valid get entries anonymous params
type GetEntriesAnonymousHandler interface {
	Handle(GetEntriesAnonymousParams) middleware.Responder
}

// NewGetEntriesAnonymous creates a new http.Handler for the get entries anonymous operation
func NewGetEntriesAnonymous(ctx *middleware.Context, handler GetEntriesAnonymousHandler) *GetEntriesAnonymous {
	return &GetEntriesAnonymous{Context: ctx, Handler: handler}
}

/*GetEntriesAnonymous swagger:route GET /entries/anonymous entries getEntriesAnonymous

GetEntriesAnonymous get entries anonymous API

*/
type GetEntriesAnonymous struct {
	Context *middleware.Context
	Handler GetEntriesAnonymousHandler
}

func (o *GetEntriesAnonymous) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetEntriesAnonymousParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
