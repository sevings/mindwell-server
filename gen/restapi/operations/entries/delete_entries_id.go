// Code generated by go-swagger; DO NOT EDIT.

package entries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// DeleteEntriesIDHandlerFunc turns a function with the right signature into a delete entries ID handler
type DeleteEntriesIDHandlerFunc func(DeleteEntriesIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteEntriesIDHandlerFunc) Handle(params DeleteEntriesIDParams) middleware.Responder {
	return fn(params)
}

// DeleteEntriesIDHandler interface for that can handle valid delete entries ID params
type DeleteEntriesIDHandler interface {
	Handle(DeleteEntriesIDParams) middleware.Responder
}

// NewDeleteEntriesID creates a new http.Handler for the delete entries ID operation
func NewDeleteEntriesID(ctx *middleware.Context, handler DeleteEntriesIDHandler) *DeleteEntriesID {
	return &DeleteEntriesID{Context: ctx, Handler: handler}
}

/*DeleteEntriesID swagger:route DELETE /entries/{id} entries deleteEntriesId

DeleteEntriesID delete entries ID API

*/
type DeleteEntriesID struct {
	Context *middleware.Context
	Handler DeleteEntriesIDHandler
}

func (o *DeleteEntriesID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteEntriesIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
