// Code generated by go-swagger; DO NOT EDIT.

package account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetAccountVerificationEmailHandlerFunc turns a function with the right signature into a get account verification email handler
type GetAccountVerificationEmailHandlerFunc func(GetAccountVerificationEmailParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetAccountVerificationEmailHandlerFunc) Handle(params GetAccountVerificationEmailParams) middleware.Responder {
	return fn(params)
}

// GetAccountVerificationEmailHandler interface for that can handle valid get account verification email params
type GetAccountVerificationEmailHandler interface {
	Handle(GetAccountVerificationEmailParams) middleware.Responder
}

// NewGetAccountVerificationEmail creates a new http.Handler for the get account verification email operation
func NewGetAccountVerificationEmail(ctx *middleware.Context, handler GetAccountVerificationEmailHandler) *GetAccountVerificationEmail {
	return &GetAccountVerificationEmail{Context: ctx, Handler: handler}
}

/*GetAccountVerificationEmail swagger:route GET /account/verification/{email} account getAccountVerificationEmail

verify account email

*/
type GetAccountVerificationEmail struct {
	Context *middleware.Context
	Handler GetAccountVerificationEmailHandler
}

func (o *GetAccountVerificationEmail) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetAccountVerificationEmailParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
