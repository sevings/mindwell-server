// Code generated by go-swagger; DO NOT EDIT.

package me

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetUsersMeEntriesHandlerFunc turns a function with the right signature into a get users me entries handler
type GetUsersMeEntriesHandlerFunc func(GetUsersMeEntriesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetUsersMeEntriesHandlerFunc) Handle(params GetUsersMeEntriesParams) middleware.Responder {
	return fn(params)
}

// GetUsersMeEntriesHandler interface for that can handle valid get users me entries params
type GetUsersMeEntriesHandler interface {
	Handle(GetUsersMeEntriesParams) middleware.Responder
}

// NewGetUsersMeEntries creates a new http.Handler for the get users me entries operation
func NewGetUsersMeEntries(ctx *middleware.Context, handler GetUsersMeEntriesHandler) *GetUsersMeEntries {
	return &GetUsersMeEntries{Context: ctx, Handler: handler}
}

/*GetUsersMeEntries swagger:route GET /users/me/entries me getUsersMeEntries

GetUsersMeEntries get users me entries API

*/
type GetUsersMeEntries struct {
	Context *middleware.Context
	Handler GetUsersMeEntriesHandler
}

func (o *GetUsersMeEntries) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetUsersMeEntriesParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
