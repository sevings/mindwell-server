// Code generated by go-swagger; DO NOT EDIT.

package me

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sevings/yummy-server/gen/models"
)

// PostUsersMeEntriesOKCode is the HTTP code returned for type PostUsersMeEntriesOK
const PostUsersMeEntriesOKCode int = 200

/*PostUsersMeEntriesOK Entry data

swagger:response postUsersMeEntriesOK
*/
type PostUsersMeEntriesOK struct {

	/*
	  In: Body
	*/
	Payload *models.Entry `json:"body,omitempty"`
}

// NewPostUsersMeEntriesOK creates PostUsersMeEntriesOK with default headers values
func NewPostUsersMeEntriesOK() *PostUsersMeEntriesOK {
	return &PostUsersMeEntriesOK{}
}

// WithPayload adds the payload to the post users me entries o k response
func (o *PostUsersMeEntriesOK) WithPayload(payload *models.Entry) *PostUsersMeEntriesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post users me entries o k response
func (o *PostUsersMeEntriesOK) SetPayload(payload *models.Entry) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUsersMeEntriesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostUsersMeEntriesForbiddenCode is the HTTP code returned for type PostUsersMeEntriesForbidden
const PostUsersMeEntriesForbiddenCode int = 403

/*PostUsersMeEntriesForbidden access denied

swagger:response postUsersMeEntriesForbidden
*/
type PostUsersMeEntriesForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostUsersMeEntriesForbidden creates PostUsersMeEntriesForbidden with default headers values
func NewPostUsersMeEntriesForbidden() *PostUsersMeEntriesForbidden {
	return &PostUsersMeEntriesForbidden{}
}

// WithPayload adds the payload to the post users me entries forbidden response
func (o *PostUsersMeEntriesForbidden) WithPayload(payload *models.Error) *PostUsersMeEntriesForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post users me entries forbidden response
func (o *PostUsersMeEntriesForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUsersMeEntriesForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
