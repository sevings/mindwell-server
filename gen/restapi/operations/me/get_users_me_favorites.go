// Code generated by go-swagger; DO NOT EDIT.

package me

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetUsersMeFavoritesHandlerFunc turns a function with the right signature into a get users me favorites handler
type GetUsersMeFavoritesHandlerFunc func(GetUsersMeFavoritesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetUsersMeFavoritesHandlerFunc) Handle(params GetUsersMeFavoritesParams) middleware.Responder {
	return fn(params)
}

// GetUsersMeFavoritesHandler interface for that can handle valid get users me favorites params
type GetUsersMeFavoritesHandler interface {
	Handle(GetUsersMeFavoritesParams) middleware.Responder
}

// NewGetUsersMeFavorites creates a new http.Handler for the get users me favorites operation
func NewGetUsersMeFavorites(ctx *middleware.Context, handler GetUsersMeFavoritesHandler) *GetUsersMeFavorites {
	return &GetUsersMeFavorites{Context: ctx, Handler: handler}
}

/*GetUsersMeFavorites swagger:route GET /users/me/favorites me getUsersMeFavorites

GetUsersMeFavorites get users me favorites API

*/
type GetUsersMeFavorites struct {
	Context *middleware.Context
	Handler GetUsersMeFavoritesHandler
}

func (o *GetUsersMeFavorites) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetUsersMeFavoritesParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
