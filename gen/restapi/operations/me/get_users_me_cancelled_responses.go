// Code generated by go-swagger; DO NOT EDIT.

package me

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sevings/yummy-server/gen/models"
)

// GetUsersMeCancelledOKCode is the HTTP code returned for type GetUsersMeCancelledOK
const GetUsersMeCancelledOKCode int = 200

/*GetUsersMeCancelledOK User list

swagger:response getUsersMeCancelledOK
*/
type GetUsersMeCancelledOK struct {

	/*
	  In: Body
	*/
	Payload *models.UserList `json:"body,omitempty"`
}

// NewGetUsersMeCancelledOK creates GetUsersMeCancelledOK with default headers values
func NewGetUsersMeCancelledOK() *GetUsersMeCancelledOK {
	return &GetUsersMeCancelledOK{}
}

// WithPayload adds the payload to the get users me cancelled o k response
func (o *GetUsersMeCancelledOK) WithPayload(payload *models.UserList) *GetUsersMeCancelledOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users me cancelled o k response
func (o *GetUsersMeCancelledOK) SetPayload(payload *models.UserList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersMeCancelledOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUsersMeCancelledForbiddenCode is the HTTP code returned for type GetUsersMeCancelledForbidden
const GetUsersMeCancelledForbiddenCode int = 403

/*GetUsersMeCancelledForbidden access denied

swagger:response getUsersMeCancelledForbidden
*/
type GetUsersMeCancelledForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUsersMeCancelledForbidden creates GetUsersMeCancelledForbidden with default headers values
func NewGetUsersMeCancelledForbidden() *GetUsersMeCancelledForbidden {
	return &GetUsersMeCancelledForbidden{}
}

// WithPayload adds the payload to the get users me cancelled forbidden response
func (o *GetUsersMeCancelledForbidden) WithPayload(payload *models.Error) *GetUsersMeCancelledForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users me cancelled forbidden response
func (o *GetUsersMeCancelledForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersMeCancelledForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
