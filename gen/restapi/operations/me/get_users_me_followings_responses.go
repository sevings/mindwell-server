// Code generated by go-swagger; DO NOT EDIT.

package me

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sevings/yummy-server/gen/models"
)

// GetUsersMeFollowingsOKCode is the HTTP code returned for type GetUsersMeFollowingsOK
const GetUsersMeFollowingsOKCode int = 200

/*GetUsersMeFollowingsOK User list

swagger:response getUsersMeFollowingsOK
*/
type GetUsersMeFollowingsOK struct {

	/*
	  In: Body
	*/
	Payload *models.UserList `json:"body,omitempty"`
}

// NewGetUsersMeFollowingsOK creates GetUsersMeFollowingsOK with default headers values
func NewGetUsersMeFollowingsOK() *GetUsersMeFollowingsOK {
	return &GetUsersMeFollowingsOK{}
}

// WithPayload adds the payload to the get users me followings o k response
func (o *GetUsersMeFollowingsOK) WithPayload(payload *models.UserList) *GetUsersMeFollowingsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users me followings o k response
func (o *GetUsersMeFollowingsOK) SetPayload(payload *models.UserList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersMeFollowingsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUsersMeFollowingsForbiddenCode is the HTTP code returned for type GetUsersMeFollowingsForbidden
const GetUsersMeFollowingsForbiddenCode int = 403

/*GetUsersMeFollowingsForbidden access denied

swagger:response getUsersMeFollowingsForbidden
*/
type GetUsersMeFollowingsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUsersMeFollowingsForbidden creates GetUsersMeFollowingsForbidden with default headers values
func NewGetUsersMeFollowingsForbidden() *GetUsersMeFollowingsForbidden {
	return &GetUsersMeFollowingsForbidden{}
}

// WithPayload adds the payload to the get users me followings forbidden response
func (o *GetUsersMeFollowingsForbidden) WithPayload(payload *models.Error) *GetUsersMeFollowingsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users me followings forbidden response
func (o *GetUsersMeFollowingsForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersMeFollowingsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
