// Code generated by go-swagger; DO NOT EDIT.

package me

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sevings/yummy-server/gen/models"
)

// GetUsersMeWatchingOKCode is the HTTP code returned for type GetUsersMeWatchingOK
const GetUsersMeWatchingOKCode int = 200

/*GetUsersMeWatchingOK Entry list

swagger:response getUsersMeWatchingOK
*/
type GetUsersMeWatchingOK struct {

	/*
	  In: Body
	*/
	Payload *models.Feed `json:"body,omitempty"`
}

// NewGetUsersMeWatchingOK creates GetUsersMeWatchingOK with default headers values
func NewGetUsersMeWatchingOK() *GetUsersMeWatchingOK {
	return &GetUsersMeWatchingOK{}
}

// WithPayload adds the payload to the get users me watching o k response
func (o *GetUsersMeWatchingOK) WithPayload(payload *models.Feed) *GetUsersMeWatchingOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users me watching o k response
func (o *GetUsersMeWatchingOK) SetPayload(payload *models.Feed) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersMeWatchingOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUsersMeWatchingForbiddenCode is the HTTP code returned for type GetUsersMeWatchingForbidden
const GetUsersMeWatchingForbiddenCode int = 403

/*GetUsersMeWatchingForbidden access denied

swagger:response getUsersMeWatchingForbidden
*/
type GetUsersMeWatchingForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUsersMeWatchingForbidden creates GetUsersMeWatchingForbidden with default headers values
func NewGetUsersMeWatchingForbidden() *GetUsersMeWatchingForbidden {
	return &GetUsersMeWatchingForbidden{}
}

// WithPayload adds the payload to the get users me watching forbidden response
func (o *GetUsersMeWatchingForbidden) WithPayload(payload *models.Error) *GetUsersMeWatchingForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users me watching forbidden response
func (o *GetUsersMeWatchingForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersMeWatchingForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
