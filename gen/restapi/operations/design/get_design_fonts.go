// Code generated by go-swagger; DO NOT EDIT.

package design

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	errors "github.com/go-openapi/errors"
	middleware "github.com/go-openapi/runtime/middleware"
	strfmt "github.com/go-openapi/strfmt"
	swag "github.com/go-openapi/swag"
	validate "github.com/go-openapi/validate"
)

// GetDesignFontsHandlerFunc turns a function with the right signature into a get design fonts handler
type GetDesignFontsHandlerFunc func(GetDesignFontsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetDesignFontsHandlerFunc) Handle(params GetDesignFontsParams) middleware.Responder {
	return fn(params)
}

// GetDesignFontsHandler interface for that can handle valid get design fonts params
type GetDesignFontsHandler interface {
	Handle(GetDesignFontsParams) middleware.Responder
}

// NewGetDesignFonts creates a new http.Handler for the get design fonts operation
func NewGetDesignFonts(ctx *middleware.Context, handler GetDesignFontsHandler) *GetDesignFonts {
	return &GetDesignFonts{Context: ctx, Handler: handler}
}

/*GetDesignFonts swagger:route GET /design/fonts design getDesignFonts

GetDesignFonts get design fonts API

*/
type GetDesignFonts struct {
	Context *middleware.Context
	Handler GetDesignFontsHandler
}

func (o *GetDesignFonts) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetDesignFontsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GetDesignFontsOKBody get design fonts o k body
// swagger:model GetDesignFontsOKBody

type GetDesignFontsOKBody struct {

	// fonts
	// Required: true
	Fonts []string `json:"fonts"`
}

/* polymorph GetDesignFontsOKBody fonts false */

// Validate validates this get design fonts o k body
func (o *GetDesignFontsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateFonts(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetDesignFontsOKBody) validateFonts(formats strfmt.Registry) error {

	if err := validate.Required("getDesignFontsOK"+"."+"fonts", "body", o.Fonts); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetDesignFontsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetDesignFontsOKBody) UnmarshalBinary(b []byte) error {
	var res GetDesignFontsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
