// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetUsersIDFollowingsHandlerFunc turns a function with the right signature into a get users ID followings handler
type GetUsersIDFollowingsHandlerFunc func(GetUsersIDFollowingsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetUsersIDFollowingsHandlerFunc) Handle(params GetUsersIDFollowingsParams) middleware.Responder {
	return fn(params)
}

// GetUsersIDFollowingsHandler interface for that can handle valid get users ID followings params
type GetUsersIDFollowingsHandler interface {
	Handle(GetUsersIDFollowingsParams) middleware.Responder
}

// NewGetUsersIDFollowings creates a new http.Handler for the get users ID followings operation
func NewGetUsersIDFollowings(ctx *middleware.Context, handler GetUsersIDFollowingsHandler) *GetUsersIDFollowings {
	return &GetUsersIDFollowings{Context: ctx, Handler: handler}
}

/*GetUsersIDFollowings swagger:route GET /users/{id}/followings users getUsersIdFollowings

GetUsersIDFollowings get users ID followings API

*/
type GetUsersIDFollowings struct {
	Context *middleware.Context
	Handler GetUsersIDFollowingsHandler
}

func (o *GetUsersIDFollowings) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetUsersIDFollowingsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
