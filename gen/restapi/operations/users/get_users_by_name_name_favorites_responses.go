// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sevings/yummy/gen/models"
)

// GetUsersByNameNameFavoritesOKCode is the HTTP code returned for type GetUsersByNameNameFavoritesOK
const GetUsersByNameNameFavoritesOKCode int = 200

/*GetUsersByNameNameFavoritesOK Entry list

swagger:response getUsersByNameNameFavoritesOK
*/
type GetUsersByNameNameFavoritesOK struct {

	/*
	  In: Body
	*/
	Payload *models.Feed `json:"body,omitempty"`
}

// NewGetUsersByNameNameFavoritesOK creates GetUsersByNameNameFavoritesOK with default headers values
func NewGetUsersByNameNameFavoritesOK() *GetUsersByNameNameFavoritesOK {
	return &GetUsersByNameNameFavoritesOK{}
}

// WithPayload adds the payload to the get users by name name favorites o k response
func (o *GetUsersByNameNameFavoritesOK) WithPayload(payload *models.Feed) *GetUsersByNameNameFavoritesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users by name name favorites o k response
func (o *GetUsersByNameNameFavoritesOK) SetPayload(payload *models.Feed) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersByNameNameFavoritesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUsersByNameNameFavoritesForbiddenCode is the HTTP code returned for type GetUsersByNameNameFavoritesForbidden
const GetUsersByNameNameFavoritesForbiddenCode int = 403

/*GetUsersByNameNameFavoritesForbidden access denied

swagger:response getUsersByNameNameFavoritesForbidden
*/
type GetUsersByNameNameFavoritesForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUsersByNameNameFavoritesForbidden creates GetUsersByNameNameFavoritesForbidden with default headers values
func NewGetUsersByNameNameFavoritesForbidden() *GetUsersByNameNameFavoritesForbidden {
	return &GetUsersByNameNameFavoritesForbidden{}
}

// WithPayload adds the payload to the get users by name name favorites forbidden response
func (o *GetUsersByNameNameFavoritesForbidden) WithPayload(payload *models.Error) *GetUsersByNameNameFavoritesForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users by name name favorites forbidden response
func (o *GetUsersByNameNameFavoritesForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersByNameNameFavoritesForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUsersByNameNameFavoritesNotFoundCode is the HTTP code returned for type GetUsersByNameNameFavoritesNotFound
const GetUsersByNameNameFavoritesNotFoundCode int = 404

/*GetUsersByNameNameFavoritesNotFound User not found

swagger:response getUsersByNameNameFavoritesNotFound
*/
type GetUsersByNameNameFavoritesNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUsersByNameNameFavoritesNotFound creates GetUsersByNameNameFavoritesNotFound with default headers values
func NewGetUsersByNameNameFavoritesNotFound() *GetUsersByNameNameFavoritesNotFound {
	return &GetUsersByNameNameFavoritesNotFound{}
}

// WithPayload adds the payload to the get users by name name favorites not found response
func (o *GetUsersByNameNameFavoritesNotFound) WithPayload(payload *models.Error) *GetUsersByNameNameFavoritesNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users by name name favorites not found response
func (o *GetUsersByNameNameFavoritesNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersByNameNameFavoritesNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
